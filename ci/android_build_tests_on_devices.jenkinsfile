pipeline {

    agent {
        label 'android'
    }

    options {
        timeout(time: 2, unit: 'HOURS')
    }

    stages {
        stage('Git checkout') {
            steps {
                git credentialsId: 'github',
                    url: 'git@github.com:artemnikitin/aws-device-farm-sample-app-for-android.git'
            }
        }
        stage('Build Docker image') {
            options {
                retry(2)
            }
            steps {
                dir("ci") {
                    sh "docker build -t android-base ."
                }
            }
        }
        stage('Build Android') {
            options {
                retry(2)
            }
            steps {
                script {
                    def runScript = """
                        docker run -d --rm \
                        -v $WORKSPACE:/app \
                        -w "/app" \
                        android-base:latest \
                        /bin/bash ./gradlew clean assembleDebug assembleAndroidTest
                    """
                    def container = sh(returnStdout: true, script: runScript)
                    sh "docker attach ${container}"
                }
            }
        }
        stage('Run tests in AWS Device Farm') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding',
                                credentialsId: 'podlodka-aws',
                                accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    sh """
                        curl https://artnik-files.s3.amazonaws.com/devicefarm-ci-tool_linux_amd64 \
                            --output devicefarm-ci-tool_linux_amd64
                        chmod a+x devicefarm-ci-tool_linux_amd64

                        ./devicefarm-ci-tool_linux_amd64 -project test \
                            -app app/build/outputs/apk/app-debug.apk \
                            -test app/build/outputs/apk/app-debug-androidTest.apk \
                            -testType INSTRUMENTATION \
                            -devices samsung \
                            -wait \
                            -checkEvery 60 \
                            -ignoreUnavailableDevices
                    """
                }
            }
        }
    }

    post {
        cleanup {
            cleanWs()
        }
    }

}
